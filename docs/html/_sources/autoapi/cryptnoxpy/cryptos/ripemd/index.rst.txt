:py:mod:`cryptnoxpy.cryptos.ripemd`
===================================

.. py:module:: cryptnoxpy.cryptos.ripemd


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cryptnoxpy.cryptos.ripemd.RIPEMD160
   cryptnoxpy.cryptos.ripemd.RMDContext



Functions
~~~~~~~~~

.. autoapisummary::

   cryptnoxpy.cryptos.ripemd.new
   cryptnoxpy.cryptos.ripemd.ROL
   cryptnoxpy.cryptos.ripemd.F0
   cryptnoxpy.cryptos.ripemd.F1
   cryptnoxpy.cryptos.ripemd.F2
   cryptnoxpy.cryptos.ripemd.F3
   cryptnoxpy.cryptos.ripemd.F4
   cryptnoxpy.cryptos.ripemd.R
   cryptnoxpy.cryptos.ripemd.RMD160Transform
   cryptnoxpy.cryptos.ripemd.RMD160Update
   cryptnoxpy.cryptos.ripemd.RMD160Final



Attributes
~~~~~~~~~~

.. autoapisummary::

   cryptnoxpy.cryptos.ripemd.is_python2
   cryptnoxpy.cryptos.ripemd.digest_size
   cryptnoxpy.cryptos.ripemd.digestsize
   cryptnoxpy.cryptos.ripemd.range
   cryptnoxpy.cryptos.ripemd.K0
   cryptnoxpy.cryptos.ripemd.K1
   cryptnoxpy.cryptos.ripemd.K2
   cryptnoxpy.cryptos.ripemd.K3
   cryptnoxpy.cryptos.ripemd.K4
   cryptnoxpy.cryptos.ripemd.KK0
   cryptnoxpy.cryptos.ripemd.KK1
   cryptnoxpy.cryptos.ripemd.KK2
   cryptnoxpy.cryptos.ripemd.KK3
   cryptnoxpy.cryptos.ripemd.KK4
   cryptnoxpy.cryptos.ripemd.PADDING


.. py:data:: is_python2
   

   

.. py:data:: digest_size
   :annotation: = 20

   

.. py:data:: digestsize
   :annotation: = 20

   

.. py:data:: range
   

   

.. py:class:: RIPEMD160(arg=None)

   Return a new RIPEMD160 object. An optional string argument
   may be provided; if present, this string will be automatically
   hashed.

   .. py:method:: update(self, arg)

      update(arg)


   .. py:method:: digest(self)

      digest()


   .. py:method:: hexdigest(self)

      hexdigest()


   .. py:method:: copy(self)

      copy()



.. py:function:: new(arg=None)

   Return a new RIPEMD160 object. An optional string argument
   may be provided; if present, this string will be automatically
   hashed.


.. py:class:: RMDContext

   .. py:method:: copy(self)



.. py:data:: K0
   :annotation: = 0

   

.. py:data:: K1
   :annotation: = 1518500249

   

.. py:data:: K2
   :annotation: = 1859775393

   

.. py:data:: K3
   :annotation: = 2400959708

   

.. py:data:: K4
   :annotation: = 2840853838

   

.. py:data:: KK0
   :annotation: = 1352829926

   

.. py:data:: KK1
   :annotation: = 1548603684

   

.. py:data:: KK2
   :annotation: = 1836072691

   

.. py:data:: KK3
   :annotation: = 2053994217

   

.. py:data:: KK4
   :annotation: = 0

   

.. py:function:: ROL(n, x)


.. py:function:: F0(x, y, z)


.. py:function:: F1(x, y, z)


.. py:function:: F2(x, y, z)


.. py:function:: F3(x, y, z)


.. py:function:: F4(x, y, z)


.. py:function:: R(a, b, c, d, e, Fj, Kj, sj, rj, X)


.. py:data:: PADDING
   

   

.. py:function:: RMD160Transform(state, block)


.. py:function:: RMD160Update(ctx, inp, inplen)


.. py:function:: RMD160Final(ctx)


